[tool.poetry]
name = "yatracker"
version = "2023.8.4"
description = "Async client for Yandex Tracker API"
authors = ["Oleg A. <oleg@trueweb.app>"]
maintainers = ["Oleg A. <oleg@trueweb.app>"]
license = "MIT"
readme = "README.md"
homepage = ""
repository = "https://github.com/Olegt0rr/YaTracker/"
documentation = "https://yandex.ru/dev/connect/tracker/"
keywords = [
    "Yandex",
    "Tracker",
    "API",
    "async",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.8"
certifi = "^2023"
msgspec = "^0.18"


[tool.poetry.dev-dependencies]
ruff = "^0"
black = "^23"
coverage = "^7"
mypy = "^1"
pre-commit = "^3"
pytest = "^7"
pytest-asyncio = "^0"
pytest-cov = "^4"


[tool.black]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint.'MASTER']
extension-pkg-whitelist = "pydantic"

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 88
disable = "C0114, C0115, C0116, C0415, R0903"

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
pretty = true

[[tool.mypy.overrides]]
module = "*.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true


[tool.ruff]
src = ["app", "tools", "tests"]
select = ["ALL"]
ignore = ["A003", "ANN002", "ANN003", "ANN101", "ANN102", "D100", "D101", "D106", "D107", "D104", "D203", "D213", "RUF001", "RUF002", "RUF003", "S101", "TCH001", "TCH002" ,"PT015", "PT017", "B011"]
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.flake8-type-checking]
runtime-evaluated-base-classes = ["msgspec.Struct"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "INP001"]
"tools/*" = ["INP001"]


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
